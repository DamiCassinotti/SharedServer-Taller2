swagger: '2.0'
info:
  description: API para el shared server de Comprame
  title: Comprame - Shared Server API
  version: 1.0.0
host: shared-server-tallerii.herokuapp.com
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: tracking
    description: |
      Llamados relacionados con la administracion del seguimiento de los envios
  - name: payment
    description: |
      Llamados relacionados con la administración de los pagos
  - name: app server
    description: |
      Llamados relacionados con la administración de los App Servers
  - name: user
    description: |
      Llamados relacionados con la administración de los Usuarios
  - name: delivery
    description: |
      Llamados relacionados con la administración de la estimacion de los envios
paths:
  /deliveries/estimate:
    post:
      tags: 
        - delivery
      description: Estimar el valor de un envío
      parameters: 
        - in: body
          name: body
          required: true
          schema: 
            $ref: "#/definitions/Trip"
      responses: 
        200: 
          description: "Estimación correcta"
          schema:
            $ref: '#/definitions/TripWithCost'
        400: 
          description: "Parametros erroneos (Code 2)"
          schema: 
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access (Code 1)"
          schema:
              $ref: '#/definitions/Error'
        500: 
          description: "Unexpected error (Code 0)"
          schema: 
            $ref: "#/definitions/Error"
      summary: "Estimar costo de envio"
  /tracking:
    get:
      tags:
      - "tracking"
      summary: "Obtiene el listado de envios. Cada envio viene en su estado actual."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        201:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tracking"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "tracking"
      summary: "Crea un nuevo envio para su seguimiento"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Tracking"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
  /tracking/{trackingId}:
    parameters:
      - description: "Identificador del envío"
        in: path
        name: trackingId
        required: true
        type: string
    get:
      tags:
        - tracking
      description: "Devuelve toda la información del viaje. Por cada modificacion que tenga dicho envio se devolvera un objeto tracking."
      responses:
        200:
          description: "Información del envío"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tracking"
        404:
          description: "Viaje inexistente. Code 1"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un viaje"
    put:
      tags:
        - tracking
      description: "Devuelve la informacion actualizada del envio."
      parameters:
        - description: Nuevo estado del envio
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/NewTrackingStatus"
      responses:
        200:
          description: "Información del envío"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tracking"
        400:
          description: "Parametros faltantes. Code 2"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Viaje inexistente. Code 2"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Actualizar información de un viaje"
  /payments:
    get:
      tags:
      - "payment"
      summary: "Get my payments"
      operationId: "getPayments"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PaymentResponse"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "payment"
      summary: "Create a new payment"
      description: ""
      operationId: "addPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Payment's information"
        required: true
        schema:
          $ref: "#/definitions/PaymentRequest"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PaymentResponse"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
        400:
          description: "Parametros erroneos. Code 2"
          schema:
            $ref: "#/definitions/Error"
  /payments/methods:
    get:
      tags:
      - "payment"
      summary: "Get available payment methods"
      description: "Returns all the payment methods availables"
      operationId: "getPaymethods"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Paymethod"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
  /payments/id/{paymentId}:
    parameters:
      - description: "Identificador del pago"
        in: path
        name: paymentId
        required: true
        type: string
    get:
      tags:
        - payment
      description: "Devuelve toda la información del pago."
      responses:
        200:
          description: "Información del pago"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/PaymentResponse'
        404:
          description: "Pago inexistente. Code 1"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un pago"
    put:
      tags:
        - payment
      description: "Actualiza el estado de un pago."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Nuevo estado"
        required: true
        schema:
          $ref: "#/definitions/NewPaymentStatus"
      responses:
        200:
          description: "Información del pago"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/PaymentResponse'
        400:
          description: "Parametros erroneos. Code 2"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Pago inexistente. Code 1"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Actualizar información de un pago"
  /servers:
    get:
      tags:
        - app server
      description: |
          Devuelve toda la información acerca de todos los application servers indicados.
      responses:
        200:
          description: "Todos los application servers indicados"
          schema:
            properties:
              metadata:
                $ref: "#/definitions/CollectionMetadata"
              servers:
                items:
                  $ref: '#/definitions/Server'
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Listado de application servers"
    post:
      tags:
        - app server
      description: |
        Endpoint para dar de alta un servidor.
      parameters:
        - description: "Datos para dar de alta un servidor"
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/AddServerRequest"
      responses:
        201:
          description: "Alta correcta"
          schema:
            properties:
              metadata:
                $ref: '#/definitions/EntityMetadata'
              server:
                $ref: '#/definitions/CreateServerResponse'
        400:
          description: "Parametros erroneos. Code 2"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Dar de un application server"
  /servers/{serverId}:
    parameters:
      - description: "Identificador del servidor"
        in: path
        name: serverId
        required: true
        type: string
    get:
      tags:
        - app server
      description: "Devuelve toda la información del servidor"
      responses:
        200:
          description: "Información del servidor"
          schema:
            properties:
              metadata:
                $ref: "#/definitions/EntityMetadata"
              server:
                $ref: "#/definitions/Server"
        404:
          description: "Servidor inexistente. Code 1"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Obtener información de un servidor"
    put:
      tags:
        - app server
      description: |
        Modificación de los datos de un servidor. Se ignorarán los campos de `id`, `createdBy`, `createdTime` y `lastConnection`
      parameters:
        - description: Datos para modificar a del servidor
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/UpdateServerRequest"
      responses:
        200:
          description: "Modificación correcta"
          schema:
            properties:
              metadata:
                $ref: '#/definitions/EntityMetadata'
              server:
                $ref: "#/definitions/Server"
        400:
          description: "Parámetros erroneos. Code 2"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "No existe el recurso solicitado. Code 1"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Actualización de información de un servidor"
    post:
      tags:
        - app server
      description: |
        Modificación de token de un servidor.
      responses:
        200:
          description: "Modificación correcta"
          schema:
            properties:
              metadata:
                $ref: '#/definitions/EntityMetadata'
              server:
                $ref: "#/definitions/CreateServerResponse"
        404:
          description: "No existe el recurso solicitado. Code 1"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Actualización de token de un servidor"
    delete:
      tags:
        - app server
      description: "Endpoint para dar de baja un servidor"
      responses:
        204:
          description: "Baja correcta"
        404:
          description: "No existe el recurso solicitado. Code 1"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized access. Code 0"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Unexpected error. Code 1"
          schema:
            $ref: "#/definitions/Error"
      summary: "Eliminar un servidor"
  /user/token:
    post:
      tags:
        - user
      description: "Endpoint para generar un token para utilizar en los servicios del sistema (login)"
      parameters: 
        - description: "Datos para generar token"
          in: body
          name: body
          required: true
          schema: 
            $ref: '#/definitions/BusinessUserCredentials'
      responses: 
        201: 
          description: "Token generado correctamente"
          schema:
            properties:
              metadata:
                $ref: '#/definitions/EntityMetadata'
              token:
                $ref: "#/definitions/Token"
        400: 
          description: "Parametros erroneos (Code 2)"
          schema: 
            $ref: "#/definitions/Error"
        500: 
          description: "Unexpected error (Code 0)"
          schema: 
            $ref: "#/definitions/Error"
      summary: "Generar token de usuario de negocio"
definitions:
  Version:
    type: string
    description: Versión de la api
  Id:
    type: string
    description: |
      Se guarda como un string, pero podría ser un número
      es dependiente de la implementación.
  Ref:
    type: string
    description: |
      Hash que es utilizado para prevenir colosiones.
      Cuando se crea un elemento, se debe pasar un valor de undefined (o no debe estar).
      Al actualizar, el servidor chequeará que este valor sea igual al guardado, de no coincidir,
      significa que otro actualizó el recurso, por ende, la actualización debe fallar.
  Timestamp:
    type: number
    description: |
      Tiempo en epoch
  Error:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
    type: object
  BusinessUserCredentials:
    properties:
      username:
        type: string
      password:
        type: string
        format: password
  Tracking:
    properties:
      id:
        description: identificador del envío
        type: string
      status:
        $ref: '#/definitions/TrackingStatus'
      updateAt:
        $ref: '#/definitions/Timestamp'
  TrackingStatus:
    type: string
    description: Estados de tracking (PENDIENTE, EN_TRANSITO, ENTREGADO, CANCELADO)
  NewTrackingStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/TrackingStatus'
    description: Nuevo estado de tracking
  Paymethod:
    type: "object"
    properties:
      id:
        type: "string"
      description:
        type: "string"
  Payment_Paymethod:
    type: "object"
    properties:
      epiration_date:
        type: "string"
      payment_method:
        type: "string"
      card_number:
        type: "string"
      security_code:
        type: "string"
      cardholder_name:
        type: "string"
  PaymentRequest:
    type: "object"
    properties:
      transaction_id:
        type: "string"
      currency:
        type: "string"
      value:
        type: "number"
        format: "float"
      paymentMethod:
        $ref:  "#/definitions/Payment_Paymethod"
  PaymentResponse:
    type: "object"
    properties:
      transaction_id:
        type: "string"
      currency:
        type: "string"
      value:
        type: "number"
        format: "float"
      paymentMethod:
        $ref:  "#/definitions/Payment_Paymethod"
      status:
        $ref:  "#/definitions/PaymentStatus"
  PaymentStatus:
    type: string
    description: Estados de Payment (PENDIENTE, CONFIRMADO, CANCELADO)
  NewPaymentStatus:
    type: object
    properties:
      status:
        $ref: '#/definitions/PaymentStatus'
    description: Nuevo estado de payment
  CollectionMetadata:
    properties:
      total:
        description: Cantidad de elementos existentes
        type: integer
      version:
        $ref: '#/definitions/Version'
    type: object
  Server:
    properties:
      id:
        $ref: '#/definitions/Id'
      _rev:
        $ref: '#/definitions/Ref'
      createdBy:
        $ref: '#/definitions/Id'
      createdTime:
        $ref: '#/definitions/Timestamp'
      name:
        type: string
        description: Nombre del application server
      lastConnection:
        $ref: '#/definitions/Timestamp'
  AddServerRequest:
    properties:
      createdBy:
        $ref: '#/definitions/Id'
      name:
        type: string
        description: Nombre del application server
  UpdateServerRequest:
    properties:
      _rev:
        $ref: '#/definitions/Ref'
      name:
        type: string
        description: Nombre del application server
  EntityMetadata:
    properties:
      version:
        $ref: '#/definitions/Version'
  CreateServerResponse:
    properties:
      server:
        $ref: '#/definitions/Server'
      token:
        $ref: '#/definitions/Token'
  Token:
    properties:
      expiresAt:
        $ref: '#/definitions/Timestamp'
      token:
        type: string
        description: Token de autenticación
  Trip:
    type: "object"
    properties:
      ammount:
        type: "number"
      distance:
        type: "number"
      user:
        $ref: '#/definitions/TripUser'
  TripUser:
    type: "object"
    properties:
      email:
        type: "string"
      points:
        type: "number"
      deliveries:
        type: "number"
  TripWithCost:
    type: "object"
    properties:
      ammount:
        type: "number"
      distance:
        type: "number"
      user:
        $ref: '#/definitions/TripUser'
      isAbleToDeliver:
        type: "boolean"
      cost:
        type: "number"
